prometheus server运行
##https://prometheus.io/docs/introduction/overview/
### exporter添加修改配置文件prometheus.yml，重启生效
docker run -d -p 9090:9090 -v /data/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus

##also to mount your local prometheus.yml on /etc/prometheus/prometheus.yml

node_explorer 运行
##offical advice expose 9100
#https://github.com/prometheus/node_exporter
docker run -d --net="host"  --pid="host" --cap-add=SYS_TIME  prom/node-exporter


grafana运行
docker run -d -u root -p 3000:3000 --name=grafana -v /data/grafana:/var/lib/grafana grafana/grafana
#http:docs.grafana.org/
###安装plugin记得查看说明，插件有依赖的要安装，比如node-exporter需要安装grafana-cli plugins install grafana-piechart-panel


altermanager 运行
### prom/alertmanager on hub.docker.com/u/prom名下
### two parts: rule and alartmanager. 
### Alerting with Prometheus is separated into two parts. Alerting rules in Prometheus servers send alerts to an Alertmanager.
### The main steps to setting up alerting and notifications are:

##    Setup and configure the Alertmanager
##    Configure Prometheus to talk to the Alertmanager
##    Create alerting rules in Prometheus
##  vim /etc/alertmanager/alertmanager.yml 默认不存在，需要新建
# 全局配置项
global:
  resolve_timeout: 5m # 处理超时时间，默认为5min
  smtp_smarthost: 'smtp.126.com'  # 邮箱smtp服务器代理
  smtp_from: "<sender>@126.com"
  smtp_auth_username: "<username>@126.com"
  smtp_auth_password: "<password>"
  wechat_api_url: "http://qyapi.weixin.qq.com/cgi-bin/" # 企业微信地址
  
# 定义模板信息
templates:
  - 'template/*.tmpl'

# 定义路由树信息
route:
  group_by: ['altername'] # 报警分组依据
  group_wait: 10s # 最初即第一次等待多久时间发送一组警报的通知
  group_interval: 10s # 在发送新警报前的等待时间
  repeat_interval: 1m # 发送重复警报的周期，对于email配置中，此项不可以设置过低，否则将会由于邮件发送太过频繁，被smtp服务器拒绝
  receiver: 'email' # 发送警报的接收者的名称，以下receivers name的名称
  
# 定义警报接收者的信息
receivers:
  - name: 'email' # 警报
    email_config: # 邮件配置
    - to: '<receiver_name>@**.com' # 接收警告的email配置
      html: '{{ template "test.html" .}}' # 设定邮件的内容模板
      headers: { Subject: "[WARN] 报警邮件" } # 接收邮件的标题
    webhook_config: # web_hook配置
    - url: 'http://127.0.0.1:5001'
    send_resolved: true
    wechat_configs: # 企业微信报警配置
    - send_resolved: #  企业微信报警配置
      to_party: '1' # 接收组的id
      agent_id：'1000002' # (企业微信-->自定应用-->AgentId)
      corp_id: '<company_name>'
      api_secrets: '<apiSecrets>'
      message: '{{ template "test_wechat.html" . }}' # 发送信息模板设定

inhibit_rules:
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'dev', 'instance']
### 

docker run -d --name alertmanager -p 9093:9093 prom/alertmanager


dokcer-exporer 运行
###基于cAdvisor,容器端口8080
###sed -i '2,/true/s/$/\\/g' 进行替换
###api   ip:port/metrics配置prometheus
docker run -d \
  -p 8080:8080 \
  -v /:/rootfs:ro \
  -v /var/run:/var/run:ro \
  -v /sys:/sys:ro \
  -v /var/lib/docker:/var/lib/docker:ro \
  -e TZ=Asia/Shanghai \
  --name=cadvisor \
  --privileged=true \
  google/cadvisor


pushGateway 运行


k8s集成
