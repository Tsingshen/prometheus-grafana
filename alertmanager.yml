# 全局配置项
global:
  resolve_timeout: 5m # 处理超时时间，默认为5min
  smtp_smarthost: 'smtp.126.com'  # 邮箱smtp服务器代理
  smtp_from: "<sender>@126.com"
  smtp_auth_username: "<username>@126.com"
  smtp_auth_password: "<password>"
  wechat_api_url: "http://qyapi.weixin.qq.com/cgi-bin/" # 企业微信地址
  
# 定义模板信息
templates:
  - 'template/*.tmpl'

# 定义路由树信息
route:
  group_by: ['altername'] # 报警分组依据
  group_wait: 10s # 最初即第一次等待多久时间发送一组警报的通知
  group_interval: 10s # 在发送新警报前的等待时间
  repeat_interval: 1m # 发送重复警报的周期，对于email配置中，此项不可以设置过低，否则将会由于邮件发送太过频繁，被smtp服务器拒绝
  receiver: 'email' # 发送警报的接收者的名称，以下receivers name的名称
  
# 定义警报接收者的信息
receivers:
  - name: 'email' # 警报
    email_config: # 邮件配置
    - to: '<receiver_name>@**.com' # 接收警告的email配置
      html: '{{ template "test.html" .}}' # 设定邮件的内容模板
      headers: { Subject: "[WARN] 报警邮件" } # 接收邮件的标题
    webhook_config: # web_hook配置
    - url: 'http://127.0.0.1:5001'
    send_resolved: true
    wechat_configs: # 企业微信报警配置
    - send_resolved: #  企业微信报警配置
      to_party: '1' # 接收组的id
      agent_id：'1000002' # (企业微信-->自定应用-->AgentId)
      corp_id: '<company_name>'
      api_secrets: '<apiSecrets>'
      message: '{{ template "test_wechat.html" . }}' # 发送信息模板设定

inhibit_rules:
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'dev', 'instance']
### 

###### 配置test.tmpl文件
# 全局配置项
global:
  resolve_timeout: 5m # 处理超时时间，默认为5min
  smtp_smarthost: 'smtp.126.com'  # 邮箱smtp服务器代理
  smtp_from: "<sender>@126.com"
  smtp_auth_username: "<username>@126.com"
  smtp_auth_password: "<password>"
  wechat_api_url: "http://qyapi.weixin.qq.com/cgi-bin/" # 企业微信地址
  
# 定义模板信息
templates:
  - 'template/*.tmpl'

# 定义路由树信息
route:
  group_by: ['altername'] # 报警分组依据
  group_wait: 10s # 最初即第一次等待多久时间发送一组警报的通知
  group_interval: 10s # 在发送新警报前的等待时间
  repeat_interval: 1m # 发送重复警报的周期，对于email配置中，此项不可以设置过低，否则将会由于邮件发送太过频繁，被smtp服务器拒绝
  receiver: 'email' # 发送警报的接收者的名称，以下receivers name的名称
  
# 定义警报接收者的信息
receivers:
  - name: 'email' # 警报
    email_config: # 邮件配置
    - to: '<receiver_name>@**.com' # 接收警告的email配置
      html: '{{ template "test.html" .}}' # 设定邮件的内容模板
      headers: { Subject: "[WARN] 报警邮件" } # 接收邮件的标题
    webhook_config: # web_hook配置
    - url: 'http://127.0.0.1:5001'
    send_resolved: true
    wechat_configs: # 企业微信报警配置
    - send_resolved: #  企业微信报警配置
      to_party: '1' # 接收组的id
      agent_id：'1000002' # (企业微信-->自定应用-->AgentId)
      corp_id: '<company_name>'
      api_secrets: '<apiSecrets>'
      message: '{{ template "test_wechat.html" . }}' # 发送信息模板设定

inhibit_rules:
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'dev', 'instance']
### 
###### 配置 test.tmpl

{{ define "test.html" }}
<table border="1">
        <tr>
                <td>报警项</td>
                <td>实例</td>
                <td>报警阀值</td>
                <td>开始时间</td>
        </tr>
        {{ range $i, $alert := .Alerts }}
                <tr>
                        <td>{{ index $alert.Labels "alertname" }}</td>
                        <td>{{ index $alert.Labels "instance" }}</td>
                        <td>{{ index $alert.Annotations "value" }}</td>
                        <td>{{ $alert.StartsAt }}</td>
                </tr>
        {{ end }}
</table>
{{ end }}
###注：上述Labels项，表示prometheus里面的可选label项。annotation项表示报警规则中定义的annotation项的内容。


#### prometheus模板定义告警规则
groups:
 - name: test-rules
   rules:
   - alert: InstanceDown # 告警名称
     expr: up == 0 # 告警的判定条件，参考Prometheus高级查询来设定
     for: 2m # 满足告警条件持续时间多久后，才会发送告警
     labels: #标签项
      team: node
     annotations: # 解析项，详细解释告警信息
      summary: "{{$labels.instance}}: has been down"
      description: "{{$labels.instance}}: job {{$labels.job}} has been down "
      value: {{$value}}
      
#### 
1）inactive：表示当前报警信息即不是firing状态也不是pending状态

2）pending：表示在设置的阈值时间范围内被激活的

3）firing：表示超过设置的阈值时间被激活的
